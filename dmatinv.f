      SUBROUTINE MATINV (A,N,B,M,DETERM,NMAX,PIVOT,INDEX)
C
C     DOUBLE PRECISION
C
C     PURPOSE
C         SOLVES THE MATRIX EQUATION AX=B WHERE A IS A SQUARE
C         COEFFICIENT MATRIX, AND B IS A MATRIX OF CONSTANT VECTORS.
C         THE DETERMINANT AND INVERSE OF A ARE ALSO OBTAINED.
C
C     PARAMETERS :
C         A - REAL*8 .  ON INPUT : THE COEFFICIENT MATRIX.
C             ON OUTPUT : THE INVERSE OF THE COEFFICIENT MATRIX
C         N - INTEGER.  THE ORDER OF A. (1 <= N <= NMAX)
C         B - REAL*8.  ON INPUT : THE RIGHT HAND SIDE.
C             ON OUTPUT : THE SOLUTION VECTORS X.
C         M - INTEGER. THE NUMBER OF COLUMN VECTORS OF B.
C             IF M <= 0, THEN INVERSION ONLY IS DESIRED. HOWEVER A
C             DUMMY PARAMETER FOR B MUST STILL APPEAR IN THE CALLING
C             SEQUENCE.
C         DETERM - DOUBLE PRECISION.  THE DETERMINANT OF THE COEFFICIENT
C             MATRIX, A. IF A IS SINGULAR, DETERM IS SET TO ZERO, AND
C             RETURN IS MADE TO THE CALLING PROGRAM.
C         NMAX - INTEGER.  THE ROW DIMENSION FOR A AND B.
C         PIVOT, INDEX - WORK VECTORS OF LENGTH N
C
C     TIME
C         TIME TAKEN INCREASES AS THE CUBE OF THE ORDER OF THE ARRAY.
C
C     METHOD
C         GAUSS-JORDAN ELIMINATION WITH COMPLETE PIVOTING.
C
C     SOURCE
C         ARGONNE NATIONAL LABORATORY PROGRAM ANL F402S.
C
C     LAST REVISED 16/9/74
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION DETERM
      DIMENSION A(NMAX,N), B(NMAX,M), PIVOT(N), INDEX(N)
C
C     INITIALIZE DETERMINANT AND PIVOT ELEMENT ARRAY
C
      DETERM=1.D0
      DO 20 I=1,N
      PIVOT(I)=0.D0
   20 INDEX(I)=0
C
C     PERFORM SUCCESSIVE PIVOT OPERATIONS (GRAND LOOP)
C
      DO 550 I=1,N
C
C     SEARCH FOR PIVOT ELEMENT AND EXTEND DETERMINANT PARTIAL PRODUCT
C
      AMAX=0.D0
      DO 105 J=1,N
      IF (PIVOT(J).NE.0.D0) GO TO 105
      DO 100 K=1,N
      IF (PIVOT(K).NE.0.D0) GO TO 100
      TEMP=ABS(A(J,K))
      IF (TEMP.LT.AMAX) GO TO 100
      IROW=J
      ICOLUM=K
      AMAX=TEMP
  100 CONTINUE
  105 CONTINUE
      INDEX(I)=4096*IROW+ICOLUM
      J=IROW
      AMAX=A(J,ICOLUM)
      DETERM=AMAX*DETERM
C
C     RETURN IF MATRIX IS SINGULAR (ZERO PIVOT) AFTER COLUMN INTERCHANGE
C
      IF (DETERM.EQ.0.D0) GO TO 600
C
      PIVOT(ICOLUM)=AMAX
C
C     INTERCHANGE ROWS TO PUT PIVOT ELEMENT ON DIAGONAL
C
      IF (IROW.EQ.ICOLUM) GO TO 260
      DETERM=-DETERM
      DO 200 K=1,N
      SWAP=A(J,K)
      A(J,K)=A(ICOLUM,K)
      A(ICOLUM,K)=SWAP
  200 CONTINUE
      IF (M.LE.0) GO TO 260
      DO 250 K=1,M
      SWAP=B(J,K)
      B(J,K)=B(ICOLUM,K)
      B(ICOLUM,K)=SWAP
  250 CONTINUE
C
C     DIVIDE PIVOT ROW BY PIVOT ELEMENT
C
  260 K=ICOLUM
      A(ICOLUM,K)=1.D0
      DO 350 K=1,N
      A(ICOLUM,K)=A(ICOLUM,K)/AMAX
  350 CONTINUE
      IF (M.LE.0) GO TO 380
      DO 370 K=1,M
      B(ICOLUM,K)=B(ICOLUM,K)/AMAX
  370 CONTINUE
C
C     REDUCE NON-PIVOT ROWS
C
  380 DO 550 J=1,N
      IF (J.EQ.ICOLUM) GO TO 550
      T=A( J,ICOLUM)
      A( J,ICOLUM)=0.D0
      DO 450 K=1,N
      A( J,K)=A( J,K)-A(ICOLUM,K)*T
  450 CONTINUE
      IF (M.LE.0) GO TO 550
      DO 500 K=1,M
      B( J,K)=B( J,K)-B(ICOLUM,K)*T
  500 CONTINUE
  550 CONTINUE
C
C     INTERCHANGE COLUMNS AFTER ALL PIVOT OPERATIONS HAVE BEEN PERFORMED
C
  600 DO 710 I=1,N
      I1=N+1-I
      K=INDEX(I1)/4096
      ICOLUM=INDEX(I1)-4096*K
      IF (K.EQ.ICOLUM) GO TO 710
      DO 705 J=1,N
      SWAP=A(J,K)
      A(J,K)=A(J,ICOLUM)
      A(J,ICOLUM)=SWAP
  705 CONTINUE
  710 CONTINUE
C
      RETURN
      END
